Clone github repository on you local machine:
# update list of package and install git
bash:
sudo apt update
sudo apt install git

# Navigate to the Desired Directory
cd ~/projects

# Clone the Repository
https://github.com/SamanthaVSC/Linux-repositories-for-data-science.git

# Access the Cloned Repository
cd ~/Documents/Github\ repository

# or also:
git clone https://github.com/SamanthaVSC/Linux-repositories-for-data-science.git

# Access the Cloned Repository
cd Linux-repositories-for-data-science

# Updating the Local Repository
git pull origin main

# Working with Branches
git checkout main

# Steps to Add Local Files to Your Cloned GitHub Repository:

# Create new files
bash:
touch newfile.txt
# Check the Status
git status # Check the Status: After adding your files, you can check the status of your repository to see which files have been added or modified
# Stage the Changes
git add . # To prepare the files for commit, you need to stage them. You can stage specific files or all changes. To stage all changes
# Or, to stage a specific file
git add filename.txt
# Commit the Changes
git commit -m "Add new files" # After staging the files, you need to commit them to your local repository. Use the following command, adding a meaningful commit message
# Push the Changes to GitHub
git push origin main # To upload your changes to the remote repository on GitHub
# Steps to Remove Files from Your Cloned GitHub Repository:
# Navigate to Your Cloned Repository
cd ~/Documents/Github\ repository/Linux-repositories-for-data-science
git status # Check the Status
git rm newfile.txt # Remove a File
git rm --cached newfile.txt  # If you want to remove a file but keep it in your local directory
git commit -m "Remove newfile.txt" # Commit the Changes
git push origin main # Push the Changes to GitHub


# To move or copy files within your cloned GitHub repository (or any directory on your system), you can use standard Linux commands in the terminal:

# Moving Files: To move files, you can use the mv command. This command allows you to move a file from one location to another or rename it
mv [source] [destination]
e.g.
# Navigate to Your Cloned Repository
cd ~/Documents/Github\ repository/Linux-repositories-for-data-science
mv file1.txt subfolder/ # Move a File: For example, if you want to move 'file1.txt' from the current directory to a subdirectory called 'subfolder'
mv file1.txt subfolder/newfile1.txt # If you want to rename the file while moving it, you can specify a new name

# Copying Files: To copy files, you can use the cp command. This command allows you to create a copy of a file in a different location
cp [source] [destination]
e.g.
# Navigate to Your Cloned Repository
cd ~/Documents/Github\ repository/Linux-repositories-for-data-science
cp file1.txt subfolder/ # Copy a File: For example, if you want to copy 'file1.txt' to a subdirectory called 'subfolder'
cp file1.txt subfolder/newfile1.txt # If you want to copy and rename the file at the same time, you can specify a new name

# Sumary
# Moving a Directory:
bash
mv directory_name/ destination_directory/	e.g. bash: mv my_directory/ subfolder/

# Copying a Directory
bash
cp -r directory_name/ destination_directory/	e.g. bash: cp -r my_directory/ subfolder/

# After Moving or Copying # 
git status # Check the Status
git add . # Stage the Changes
git commit -m "Moved and copied files" # Commit the Changes
git push origin main # Push the Changes to GitHub

# Checking Your Git Username:
# git config --global user.name # Check Your Git Username
git config --global user.email # Check Your Git Email
# Setting Your Git Username and Email

# If you need to set or change your Git username or email
bash:
git config --global user.name "Your Name"
git config --global user.email "your_email@example.com"
